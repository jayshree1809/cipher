
package strings;
public class StringStudy{
public static void main(String[] args){
String name="CipherSchools";//created using String literals stored in method area.
String name2="CipherSchools";
String name3=new String("CipherSchools");//creating string using constructors.
String name4=new String("CipherSchools");
System.out.println(name=name2);//==operator compares references for objects and values for primitive data types.
System.out.println(name3==name4);
System.out.println(name==name3);
//String are immutable
//everytimes we do an operation on a string,a new object is created.
System.out.print("-----------------------------------------------");
//1.concationation
String s1="Hello";
s1=s1+" peeps";
System.out.println(s1);
System.out.print(s1+"how're you doing");
System.out.print(s1);//s1 remain same 
//Another way to concat is to use function 
String s2=new String ("Hello");
String s3=new String(" peeps");
String s4=s2.concat(s3);
System.out.println(s4);
System.out.println(s2);//remain same
//2. checking if strings are equal in value
//equals function ->object class.
//this generally compares references (hashcodes0
of objects(just like ==)
//but ,for string class it has been overriden to check for content equality
System.out.println(name.equals(name2));
System.out.println(name.equals(name3));
//3.creating new string object from character array 
Char arr[]={'c','i','p','h','e','r'};
String strFromArr=new String(arr);//constructor overload
System.out.println(strFromArr);
}
}

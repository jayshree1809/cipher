
package coreJava;
public class TimeComplexity{
ststic boolean isPrimeRam(int n)
{
if(n<=1)return false;
if(n==2)return true;
for(int i=2;i<n;i++)
{
if(n%i==0)return false;
}
return true;
}
staic boolean isPrimeSham(int n)
{
if(n<=1)return false;
if(n==2)return true;
for(int i=2;i<=Math.sqrt(n);i++)
{
if(n%i==0)return false;
}
return true;
}
public static void main(String[] args){
int n=100;
long start=System.currentTimeMillis();//note time before function executed
System.out.println(isPrimeRam(n));
long end=System.CurrentTimeMillis();//note time after function executed
System.out.println("Time by Ram's approach"+end-start);//this is the timetaken by the function
System.out.println(isPrimeSham(n));
}
}
